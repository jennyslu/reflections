What happens when you initialize a repository? Why do you need to do it?

	When you initialized a repository a .git folder that contains metadata about
	the repository is created. This is important because it is all thois metadata
	that allows for version control. Otherwise it is just a normal folder. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is different from the repository because the files within 
	are not yet tracked. However, it is also different from the working directory
	because it's supposed to represent one commit - a logical change. The working
	directory is simply a bucket with no such purpose. 

How can you use the staging area to make sure you have one commit per logical
change?

	Even if you make changes to several different files in the repository at once,
	you can use the staging area to only commit the changes to one file at a time. 
	It's also a good way to check your changes. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If I already have a working copy of my visualization but I want to add more to it
	using a branch is helpful because I could still show and submit the master
	branch that does work, while still working on the experimental branch.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
