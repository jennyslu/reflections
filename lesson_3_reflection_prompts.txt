When would you want to use a remote repository rather than keeping all your work
local?

    If you keep all your work locally you can't work on it on a different computer.
    You also can't collaborate with others. Also, it's good to have a backup of your 
    work in case something happens to the originals. 

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    The answers follow the same principles as to why you wouldn't want to commit
    changes automatically. Changes present on GitHub that are not in your local
    repository could be changes made by other people. You don't want to have 
    these changes merge automatically. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    forks - to copy another repo on GitHub onto your GitHub
    clones - to copy repo from GitHub on your local machine OR
    		to copy repo from your local machine to another location
    branches - to create a different version of project to work on

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can work offline. You can easily compare differences between two by running
    git diff. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    It would be easier to make sure there is always a working version of the project.
    However, I think using GitHub for small changes is more time consuming overall. 
    Much back and forth must be done and change conflicts verified before committing.
    This is more an issue related to collaborating in general, though, and not a fault of
    Git itself. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
